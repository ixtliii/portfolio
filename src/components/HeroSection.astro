---
import EyeButton from "./EyeButton.astro"
---

<style>
    @media screen and (width <= 30em){
        section{
            background-color: #F2F2F2;
            height: 90vh;
            border-radius: 0 0 44px 44px;
            background-image:
                    radial-gradient(circle,
                    #ffffff 1px,
                    rgba(255, 255, 255, 0) 1px
                    );
            background-size: 10px 10px;
            display: grid;
            position: relative;
            padding: 1.4rem;
            grid-template-columns: repeat(12, 1fr);
            grid-template-rows: repeat(10, 1fr);

            .white-dot{
                height: 100%;
                width: 100%;
                position: absolute;
                top: 0;
                left: 0;
            }
            h1{
                font-family: 'Satoshi', sans-serif;
                font-size: 4rem;
                font-style: normal;
                font-weight: 900;
                line-height: 100%;
                letter-spacing: 0.12rem;
                color: var(--c-dark);
                grid-column: 1 / span 12;
                grid-row: 8 / span 3;

                align-self: end;
            }
            h1 .char {
                display: inline-block;
            }

            .name-text{
                grid-column: 1 / span 1;
                grid-row: 1 / span 3;
                font-size: 1rem;
                font-style: normal;
                font-weight: 400;
                line-height: normal;
                letter-spacing: 0.01rem;
                writing-mode: vertical-rl;
                text-orientation: mixed;
                justify-self: start;
            }
        }

    }
</style>

<section>
    <svg class="white-dot" width="393" height="745" viewBox="0 0 393 745" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g opacity="0.1">
            <path d="M394 0.000488281C289.601 0.000493219 189.477 48.4823 115.656 134.78C41.8347 221.079 0.362303 338.124 0.362305 460.168" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M243.652 744.577C179.128 744.577 117.246 714.613 71.6202 661.275C25.9945 607.938 0.362303 535.598 0.362305 460.168" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M394 568.819C394 615.433 378.16 660.138 349.964 693.099C321.769 726.06 283.527 744.577 243.653 744.577" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M301.056 460.168C325.706 460.168 349.346 471.615 366.776 491.991C384.206 512.367 393.998 540.003 393.998 568.819" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M301.057 460.169C285.833 460.169 271.231 467.239 260.466 479.824C249.7 492.409 243.652 509.478 243.652 527.276" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M279.189 568.818C274.522 568.818 269.901 567.744 265.59 565.656C261.278 563.568 257.361 560.508 254.061 556.651C250.761 552.793 248.143 548.214 246.357 543.174C244.572 538.133 243.652 532.731 243.652 527.276" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M279.188 568.819C282.06 568.819 284.904 568.157 287.557 566.873C290.21 565.588 292.621 563.705 294.652 561.331C296.682 558.957 298.293 556.139 299.392 553.037C300.491 549.936 301.057 546.611 301.057 543.254" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M287.389 527.276C289.184 527.276 290.961 527.689 292.619 528.492C294.278 529.295 295.784 530.472 297.053 531.956C298.323 533.44 299.329 535.201 300.016 537.139C300.703 539.078 301.057 541.156 301.057 543.254" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M287.389 527.277C285.214 527.277 283.128 528.287 281.59 530.084C280.052 531.882 279.188 534.321 279.188 536.863" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M287.389 536.863H279.188" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M287.389 543.254V527.276" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M284.655 536.863V543.254" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M284.656 540.059H287.391" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M279.188 543.254H301.056" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M279.188 527.276V568.819" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M301.058 527.276H243.652" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M301.057 568.819V460.168" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M243.652 568.819H394" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M243.514 460.168L243.514 744.739" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M394 460.168H0.362305" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M0 0L0 745" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M394 0L394 745" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M284.655 543.253C283.205 543.253 281.815 542.58 280.79 541.382C279.764 540.183 279.188 538.558 279.188 536.863" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M284.655 543.254C285.014 543.254 285.37 543.171 285.701 543.011C286.033 542.85 286.334 542.615 286.588 542.318C286.842 542.021 287.043 541.669 287.181 541.282C287.318 540.894 287.389 540.478 287.389 540.059" stroke="#3B3B3B" stroke-width="2.66667"/>
            <path d="M284.652 536.869C285.01 536.869 285.366 536.951 285.698 537.112C286.029 537.272 286.33 537.508 286.584 537.805C286.838 538.101 287.039 538.453 287.177 538.841C287.314 539.229 287.385 539.644 287.385 540.064" stroke="#3B3B3B" stroke-width="2.66667"/>
        </g>
    </svg>

    <div class="name-text">Artem Diakunchak</div>
    <h1 id="animated-heading">
        UX/UI <br>DESIGNER
    </h1>
    <EyeButton />
</section>

<script>
    import { gsap } from 'gsap';

    document.addEventListener('DOMContentLoaded', function() {
        const paths = document.querySelectorAll('.white-dot path');

        gsap.set(paths, {
            strokeDasharray: '1000',
            strokeDashoffset: '1000',
            opacity: 1
        });

        const tl = gsap.timeline();

        tl.to(paths, {
            strokeDashoffset: 0,
            opacity: .5,
            duration: 2,
            ease: "power2.inOut",
            stagger: {
                amount: 1.5,
                from: "random"
            }
        });

        const heading = document.getElementById('animated-heading');
        const originalHTML = heading.innerHTML;

        const cleanedHTML = originalHTML.replace(/<br>\s+/g, '<br>');

        let newHTML = '';
        let inTag = false;
        let currentTag = '';

        for (let i = 0; i < cleanedHTML.length; i++) {
            const char = cleanedHTML[i];

            if (char === '<') {
                inTag = true;
                currentTag = char;
            } else if (char === '>') {
                currentTag += char;
                inTag = false;

                if (currentTag.toLowerCase() === '<br>') {
                    newHTML += '<br>';
                } else {
                    newHTML += currentTag;
                }

                currentTag = '';
            } else if (inTag) {
                currentTag += char;
            } else {
                if (char === ' ') {
                    newHTML += '<span class="char">&nbsp;</span>';
                } else {
                    newHTML += `<span class="char">${char}</span>`;
                }
            }
        }

        heading.innerHTML = newHTML;

        tl.from(heading.querySelectorAll('.char'), {
            y: 100,
            opacity: 0,
            duration: 1.2,
            ease: "elastic.out(1, 0.5)",
            stagger: {
                each: 0.05,
                from: "start"
            }
        }, "-=1.5");
    });
</script>
